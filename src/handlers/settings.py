from aiogram import types, Router,F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command
from src.firebase import firebase
import re

from src.filters.is_private import IsPrivateFilter
import src.keyboards.buttons as kb

settings_router = Router()
settings_router.message.filter(IsPrivateFilter())

class Settings(StatesGroup):
    change_phone = State()
    change_name = State()

'''' –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ '''
@settings_router.message(Command('settings'))
async def settings_handler(message: types.Message):
    await message.answer(f"–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ–º–µ–Ω! –ß—Ç–æ –±—É–¥–µ–º –º–µ–Ω—è—Ç—å?",reply_markup=kb.settings)

'''' –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ '''
@settings_router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
async def settings_handler(message: types.Message):
    await message.answer(f"–ú—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å! –°–æ–∑–¥–∞–¥–∏–º –∑–∞—è–≤–∫—É?",reply_markup=kb.mainMenu)

'''' –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ '''
@settings_router.message(F.text == "üì± –°–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
async def change_phone(message: types.Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç",reply_markup=kb.btn_send_number)
    await state.clear()
    await state.set_state(Settings.change_phone)

'''' –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞'''
@settings_router.message(Settings.change_phone)
async def get_phone(message: types.Message, state: FSMContext):
    if message.contact is not None:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–µ–ª–∏–ª—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
        phone_number = message.contact.phone_number
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é
        phone_number = message.text

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        if not re.match(r"(\+998|998)[0-9]{9}$", phone_number):
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
            return
    firebase.updateUserPhone(phone_number,message.from_user.id)
    await state.clear()
    await message.answer("‚úÖ –í–∞—à –Ω–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.",reply_markup=kb.mainMenu)

@settings_router.message(F.text == "üë§ –°–º–µ–Ω–∏—Ç—å –∏–º—è")
async def change_name(message: types.Message, state: FSMContext):
    await message.answer("–ö–∞–∫ –≤–∞—Å –Ω–∞–º –Ω–∞–∑—ã–≤–∞—Ç—å?")
    await state.clear()
    await state.set_state(Settings.change_name)

'''' –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏'''
@settings_router.message(Settings.change_name)
async def get_name(message: types.Message, state: FSMContext):
    username = message.text
    firebase.updateUserName(username,message.from_user.id)
    await state.clear()
    await message.answer(f"‚úÖ –¢–µ–ø–µ—Ä—å –º—ã –±—É–¥–µ–º –≤–∞—Å –Ω–∞–∑—ã–≤–∞—Ç—å {message.text}.",reply_markup=kb.mainMenu)